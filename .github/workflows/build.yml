name: Build/release

on: push

jobs:
  build: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 14.18
          cache: 'npm'
      - run: npx lerna bootstrap 
      - run: npm run build:packages
      - run: npm run build:sources
      - uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/


  package:
    runs-on: ${{ matrix.os }}
    needs: build

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-2019]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 14.18
          cache: 'npm'

      - name: Download build artifact
        uses: actions/download-artifact@v3

      - run: npm install

      - name: Package binary
        run: npm run bundle

      # Uploading latest.yml, latest-mac.yml or latest-linux.yml
      - name: Uploading Build Artifact Update Info
        uses: actions/upload-artifact@v3
        if: startsWith(matrix.os, 'windows')
        with:
          path: out/latest*.yml

      # Uploading Windows specific artifacts
      - name: Uploading Windows Build .exe
        uses: actions/upload-artifact@v3
        if: startsWith(matrix.os, 'windows')
        with:
          path: out/Franz*.exe

      # Uploading macOS specific artifacts
      - name: Uploading macOS Build .dmg
        uses: actions/upload-artifact@v3
        if: startsWith(matrix.os, 'macos')
        with:
          path: out/Franz-!(*arm64).dmg

      - name: Uploading macOS arm64 Build .dmg
        uses: actions/upload-artifact@v3
        if: startsWith(matrix.os, 'macos')
        with:
          path: out/Franz-*-arm64.dmg

      # Uploading Linux specific artifacts
      - name: Uploading Linux Build .AppImage
        uses: actions/upload-artifact@v3
        if: startsWith(matrix.os, 'linux')
        with:
          path: out/Franz*.AppImage

      - name: Uploading Linux Build .deb
        uses: actions/upload-artifact@v3
        if: startsWith(matrix.os, 'linux')
        with:
          path: out/franz*.deb

      - name: Uploading Linux Build .tar.gz
        uses: actions/upload-artifact@v3
        if: startsWith(matrix.os, 'linux')
        with:
          path: out/franz*.tar.gz

      # - name: Upload to S3
      #   uses: shallwefootball/s3-upload-action@master
      #   with:
      #     aws_key_id: ${{ secrets.AWS_KEY_ID }}
      #     aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
      #     aws_bucket: ${{ secrets.S3_BUCKET }}
      #     source_dir: out
      #     destination_dir: ${{ GITHUB_RUN_NUMBER }}

    env:
      GH_TOKEN: ${{ secrets.github_token }}
      CSC_LINK: ${{ matrix.os == 'windows-2019' && secrets.CSC_WINDOWS_LINK || secrets.CSC_LINK }}
      CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
      APPLEID: ${{ secrets.APPLEID }}
      APPLEIDPASS: ${{ secrets.APPLEIDPASS }}
      AWS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        